{
  "_args": [
    [
      {
        "raw": "@material/animation@^0.2.3",
        "scope": "@material",
        "escapedName": "@material%2fanimation",
        "name": "@material/animation",
        "rawSpec": "^0.2.3",
        "spec": ">=0.2.3 <0.3.0",
        "type": "range"
      },
      "/home/mjw/matthewjwolff.github.io/node_modules/material-components-web"
    ]
  ],
  "_from": "@material/animation@>=0.2.3 <0.3.0",
  "_id": "@material/animation@0.2.3",
  "_inCache": true,
  "_location": "/@material/animation",
  "_nodeVersion": "7.8.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/animation-0.2.3.tgz_1496171070092_0.06904622144065797"
  },
  "_npmUser": {
    "name": "ljepsen3541",
    "email": "ljepsen3541@gmail.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@material/animation@^0.2.3",
    "scope": "@material",
    "escapedName": "@material%2fanimation",
    "name": "@material/animation",
    "rawSpec": "^0.2.3",
    "spec": ">=0.2.3 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@material/button",
    "/@material/checkbox",
    "/@material/dialog",
    "/@material/drawer",
    "/@material/elevation",
    "/@material/fab",
    "/@material/icon-toggle",
    "/@material/linear-progress",
    "/@material/menu",
    "/@material/radio",
    "/@material/select",
    "/@material/slider",
    "/@material/snackbar",
    "/@material/switch",
    "/@material/tabs",
    "/@material/textfield",
    "/material-components-web"
  ],
  "_resolved": "https://registry.npmjs.org/@material/animation/-/animation-0.2.3.tgz",
  "_shasum": "25f24962cd649e76459a16ab234b7846a7a7f419",
  "_shrinkwrap": null,
  "_spec": "@material/animation@^0.2.3",
  "_where": "/home/mjw/matthewjwolff.github.io/node_modules/material-components-web",
  "bugs": {
    "url": "https://github.com/material-components/material-components-web/issues"
  },
  "dependencies": {},
  "description": "Animation Variables and Mixins used by Material Components for the web",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "25f24962cd649e76459a16ab234b7846a7a7f419",
    "tarball": "https://registry.npmjs.org/@material/animation/-/animation-0.2.3.tgz"
  },
  "homepage": "https://github.com/material-components/material-components-web#readme",
  "keywords": [
    "material components",
    "material design",
    "animation"
  ],
  "license": "Apache-2.0",
  "main": "index.js",
  "maintainers": [
    {
      "name": "material-admin",
      "email": "traviskaufman+npm@google.com"
    },
    {
      "name": "bwobrien",
      "email": "obrien.test@gmail.com"
    },
    {
      "name": "ljepsen3541",
      "email": "ljepsen3541@gmail.com"
    },
    {
      "name": "yeelan0319",
      "email": "yiranmao@gmail.com"
    },
    {
      "name": "amsheehan",
      "email": "alex.m.sheehan@gmail.com"
    },
    {
      "name": "cristobalchao",
      "email": "cchao87@gmail.com"
    },
    {
      "name": "traviskaufman",
      "email": "travis.kaufman@gmail.com"
    },
    {
      "name": "sgomes",
      "email": "mail@sgomes.io"
    }
  ],
  "name": "@material/animation",
  "optionalDependencies": {},
  "readme": "<!--docs:\ntitle: \"Animation\"\nlayout: detail\nsection: components\nexcerpt: \"Animation timing curves and utilities for smooth and consistent motion.\"\niconId: animation\npath: /catalog/animation/\n-->\n\n# Animation\n\nMDC Animation is a Sass / CSS / JavaScript library which provides a toolbelt for Material Design animation, based off of the [motion guidelines](https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations). Currently, it only covers easing curves.\n\n## Design & API Documentation\n\n<ul class=\"icon-list\">\n  <li class=\"icon-list-item icon-list-item--spec\">\n    <a href=\"https://material.io/guidelines/motion/duration-easing.html\">Material Design guidelines: Duration & easing</a>\n  </li>\n</ul>\n\n## Installation\n\n```\nnpm install --save @material/animation\n```\n\n## Usage\n\nWe currently have variables for the following 3 animation curves:\n\n| Variable name | timing function | use case |\n| --- | --- | --- |\n| `$mdc-animation-fast-out-slow-in-timing-function` | `cubic-bezier(.4, 0, .2, 1)` | Standard curve; any animations that are visible from start to finish (e.g. a FAB transforming into a toolbar) |\n| `$mdc-animation-linear-out-slow-in-timing-function` | `cubic-bezier(0, 0, .2, 1)` | Animations that cause objects to enter the screen (e.g. a fade in) |\n| `$mdc-animation-fast-out-linear-in-timing-function` | `cubic-bezier(.4, 0, ``, 1)` | Animations that cause objects to leave the screen (e.g. a fade out) |\n\n### SCSS\n\nSimply drop `mdc-animation` into your build and start using the variables:\n\n```scss\n.mdc-thing--animating {\n  animation: foo 175ms $mdc-animation-fast-out-slow-in-timing-function;\n}\n```\n\nor the mixins, which simply assign their corresponding variables to the `animation-timing-function`\nproperty:\n\n```scss\n.mdc-thing--on-screen {\n  @include mdc-animation-fast-out-linear-in;\n}\n```\n\nEvery mixin has the same name as its corresponding variable, without the `-timing-function` suffix.\n\nMDC Animation also provides helper functions for defining transitions for when something enters and exits the frame. A\nvery common example of this is something that fades in and then fades out using opacity.\n\n```scss\n@import \"@material/animation/functions\";\n\n.mdc-thing {\n  transition: mdc-animation-exit(/* $name: */ opacity, /* $duration: */ 175ms, /* $delay: */ 150ms);\n  opacity: 0;\n  will-change: opacity;\n\n  &:active {\n    transition: mdc-animation-enter(opacity, 175ms /*, $delay: 0ms by default */);\n    opacity: 1;\n  }\n}\n```\n\nNote that these functions also work with the `animation` property.\n\n```scss\n@import \"@material/animation/functions\";\n\n@keyframes fade-in {\n  from {\n    transform: translateY(-80px);\n    opacity: 0;\n  }\n\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n.mdc-thing {\n  animation: mdc-animation-enter(fade-in, 350ms);\n}\n```\n\n### CSS Classes\n\n> NOTE: dist/ will be available when installing via NPM.\n\nAlternatively, you can include the built stylesheet and use the classes it exports within your HTML\n\n```html\n<link href=\"path/to/mdc-animation/dist/mdc-animation.css\" rel=\"stylesheet\">\n<!-- ... -->\n<div id=\"my-animating-div\" class=\"mdc-animation-fast-out-slow-in\">hi</div>\n```\n\nCSS Classes have the exact same name as their mixin counterparts.\n\n### Overriding the default curves.\n\nAll animation variables are marked with `!default`, thus they can be overridden should the need\narise.\n\n### JavaScript\n\nMDC Web ships with a set of utility functions designed to make animations easier to implement.\n\n### Using Utility Functions\n\nTo use:\n```js\nimport {getCorrectEventName} from '@material/animation';\n\nconst eventToListenFor = getCorrectEventName(window, 'animationstart');\n```\n\n| Method Signature | Description |\n| --- | --- |\n| `getCorrectEventName(windowObj: Object, eventType: string)` | Returns a JavaScript event name. Prefixed if necessary. |\n| `getCorrectPropertyName(windowObj: Object, eventType: string)` | Returns a CSS property name. Prefixed if necessary. |\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/material-components/material-components-web.git"
  },
  "scripts": {},
  "version": "0.2.3"
}
